openapi: 3.0.0
info:
  title: Online Banking API
  description: This API allows customers to manage their banking services online.
  version: "1.0.0"
servers:
  - url: 'http://localhost:8080'
    description: Development server
paths:
  /customers/register:
    post:
      summary: Register a new customer
      description: Allows a new customer to register for an online banking account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRegistration'
      responses:
        '201':
          description: Customer registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '400':
          description: Invalid input
  /accounts:
    post:
      summary: Create a new account
      description: Adds another account to the customer's online banking account.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Account balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalance'
        '401':
          description: Unauthorized
  /accounts/balance:
    get:
      summary: Check account balance
      description: Retrieve the current balance of the customer's accounts.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Account balance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBalance'
        '401':
          description: Unauthorized
  /accounts/{iban}:
    delete:
      summary: Remove account
      description: Remove the specified customer's account.
      security:
        - bearerAuth: []
      parameters:
        - name: iban
          in: path
          schema:
            type: string
            example: CH6800697891274922199
        - name: transferTo
          in: query
          schema:
            type: string
            example: CH4642429394097630741
      responses:
        '200':
          description: Account deleted
        '400':
          description: Unauthorized
  /transactions/transfer:
    post:
      summary: Transfer funds
      description: Transfer funds to another account.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundTransfer'
      responses:
        '200':
          description: Transfer successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /transactions/history:
    get:
      summary: View transaction history
      description: Get a list of recent transactions.
      responses:
        '200':
          description: Transaction history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionHistory'
        '401':
          description: Unauthorized
  /customers/password:
    put:
      summary: Change password
      description: Change the customer's password.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /support/contact:
    get:
      summary: Contact customer support
      description: Options to reach out to customer support via email or phone.
      responses:
        '200':
          description: SupportContactInfo contact options
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactInformation'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CustomerRegistration:
      type: object
      required:
        - firstName
        - lastName
        - dateOfBirth
      properties:
        firstName:
          type: string
          maxLength: 32
        lastName:
          type: string
          maxLength: 32
        dateOfBirth:
          type: string
          format: date
          example: 2017-07-21
    RegistrationResponse:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          maxLength: 65
          description: A combination of `${firstName}.${lastName}`.
        password:
          type: string
    AccountBalance:
      type: object
      required:
        - iban
        - balance
      properties:
        iban:
          type: string
          example: CH1212345209244456858
        balance:
          type: string
          format: decimal
          example: 1234.15
          description: Must be a valid Swiss francs amount!
    FundTransfer:
      type: object
      required:
        - fromIban
        - toIban
        - amount
      properties:
        fromIban:
          type: string
          example: CH3412345218703571318
        toIban:
          type: string
          example: CH5012345932566956301
        amount:
          type: number
          format: float
          example: 1234.15
          description: Must be a valid Swiss francs amount!
        description:
          type: string
    TransferResponse:
      type: object
      properties:
        transactionId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - SUCCESS
            - FAILED_INVALID_AMOUNT
            - FAILED_INVALID_ACCOUNT_ACCESS
            - FAILED_NOT_ENOUGH_FUNDS
            - FAILED_RECIPIENT_NOT_FOUND
    TransactionHistory:
      type: object
      required:
        - transactionId
        - fromIban
        - toIban
        - amount
      properties:
        transactionId:
          type: string
          format: uuid
        fromIban:
          type: string
          example: CH2089144756348165443
        toIban:
          type: string
          example: CH7289144736549999683
        amount:
          type: number
          format: float
          example: 1234.15
          description: Must be a valid Swiss francs amount!
        description:
          type: string
        persistedAt:
          type: string
          format: date-time
    PasswordChange:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password
    ContactInformation:
      type: object
      required:
        - email
        - phone
      properties:
        email:
          type: string
        phone:
          type: string
