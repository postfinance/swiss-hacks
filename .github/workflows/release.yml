name: Create and publish a Docker image

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@a64d0487d7069df33b279515d35d60fa80e2ea62
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Build native executable
        run: |
          ./mvnw package \
            -Dnative \
            -Dquarkus.native.container-build=true -Dquarkus.native.additional-build-args=--initialize-at-run-time=org.hibernate.type.format.jakartajson.JakartaJsonIntegration\\,ch.postfinance.swiss.hacks.domain.Account\\,ch.postfinance.swiss.hacks.service.LoginService
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@15560696de535e4014efeff63c48f16952e52dd1
        with:
          context: .
          file: ./src/main/docker/Dockerfile.distroless
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
